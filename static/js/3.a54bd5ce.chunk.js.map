{"version":3,"sources":["utility/utility.js","components/Order/CheckoutSummery/CheckoutSummery.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummery/CheckoutSummery.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css"],"names":["inputValidation","rules","value","isValid","required","trim","minLength","length","maxLength","isEmail","test","String","toLowerCase","module","exports","checkoutSummery","props","className","styles","CheckoutSummery","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCanceled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","valuetype","valid","validation","touched","email","street","zipCode","formIsValid","orderHandler","e","preventDefault","formData","key","order","totalPrice","customer","userId","onOrderBurger","token","inputChangeHandler","id","updatedOrderForm","updatedFormElement","target","setState","errorHandler","prevProps","prevState","this","orderFormArray","push","config","form","map","el","Input","invalid","elementtype","changed","loading","Spinner","disabled","Component","connect","burgerBuilder","auth","dispatch","orderData","orderActions","withErrorHandler","axios","Checkout","history","goBack","replace","summery","to","purchaseRedirect","redirect","path","match","component","input","inputElement","errorMessage","inputClasses","InputElement","Invalid","color","textAlign","join","onChange","onBlur","Label","label"],"mappings":"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","file":"static/js/3.a54bd5ce.chunk.js","sourcesContent":["export const inputValidation = (rules, value) => {\r\n  let isValid = true;\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  if (rules.isEmail) {\r\n    const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    isValid = pattern.test(String(value).toLowerCase()) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummery\":\"CheckoutSummery_CheckoutSummery__Knkie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1ZA6b\"};","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport styles from \"./CheckoutSummery.module.css\";\r\n\r\nconst checkoutSummery = (props) => (\r\n  <div className={styles.CheckoutSummery}>\r\n    <h1>We hope it tastes well!</h1>\r\n    <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n      <Burger ingredients={props.ingredients} />\r\n    </div>\r\n    <Button btnType=\"Danger\" clicked={props.checkoutCanceled}>\r\n      CANCEL\r\n    </Button>\r\n    <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n      CONTINUE\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default checkoutSummery;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"../../../axios-orders\";\r\nimport * as orderActions from \"../../../store/actions/index\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport styles from \"./ContactData.module.css\";\r\nimport withErrorHandler from \"../../../hoc/WithErrorHandler/WithErrorHandler\";\r\nimport { inputValidation } from \"../../../utility/utility\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\",\r\n          valuetype: \"Name\",\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        validation: { required: true, minLength: 3, maxLength: 10 },\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-mail\",\r\n          valuetype: \"E-mail\",\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: { required: true, minLength: 3, isEmail: true },\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Street\",\r\n          valuetype: \"Street\",\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: { required: true, minLength: 3, maxLength: 10 },\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP code\",\r\n          valuetype: \"Code\",\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: { required: true, minLength: 3, maxLength: 10 },\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let formIsValid = true;\r\n    for (let key in this.state.orderForm) {\r\n      formIsValid = this.state.orderForm[key].valid && formIsValid;\r\n    }\r\n    if (prevState.formIsValid !== formIsValid) {\r\n      this.setState({ formIsValid: formIsValid });\r\n    }\r\n  }\r\n\r\n  orderHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = {};\r\n    for (let key in this.state.orderForm) {\r\n      formData[key] = this.state.orderForm[key].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      totalPrice: this.props.totalPrice,\r\n      customer: formData,\r\n      userId: this.props.userId,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  inputChangeHandler = (e, id) => {\r\n    const updatedOrderForm = { ...this.state.orderForm };\r\n    const updatedFormElement = { ...updatedOrderForm[id] };\r\n    updatedFormElement.value = e.target.value;\r\n    updatedFormElement.valid = inputValidation(\r\n      updatedFormElement.validation,\r\n      updatedFormElement.value\r\n    );\r\n\r\n    updatedOrderForm[id] = updatedFormElement;\r\n    this.setState({ orderForm: updatedOrderForm });\r\n  };\r\n  errorHandler = (id) => {\r\n    const updatedOrderForm = { ...this.state.orderForm };\r\n    const updatedFormElement = { ...updatedOrderForm[id] };\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[id] = updatedFormElement;\r\n    this.setState({ orderForm: updatedOrderForm });\r\n  };\r\n\r\n  render() {\r\n    let orderFormArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      orderFormArray.push({ id: key, config: this.state.orderForm[key] });\r\n    }\r\n    let form = (\r\n      <form>\r\n        {orderFormArray.map((el) => {\r\n          return (\r\n            <Input\r\n              invalid={!el.config.valid}\r\n              touched={el.config.touched}\r\n              key={el.id}\r\n              elementtype={el.config.elementType}\r\n              elementConfig={el.config.elementConfig}\r\n              value={el.config.value}\r\n              changed={(e) => this.inputChangeHandler(e, el.id)}\r\n              errorHandler={() => this.errorHandler(el.id)}\r\n            />\r\n          );\r\n        })}\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={styles.ContactData}>\r\n        <h1>Enter your Contact Data</h1>\r\n        {form}\r\n        <Button\r\n          disabled={!this.state.formIsValid}\r\n          btnType=\"Success\"\r\n          clicked={this.orderHandler}\r\n        >\r\n          ORDER\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(orderActions.purchaseStart(orderData, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport CheckoutSummery from \"../../components/Order/CheckoutSummery/CheckoutSummery\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\nclass Checkout extends Component {\r\n  checkoutCanceled = () => {\r\n    this.props.history.goBack();\r\n    // setTimeout(() => {}, 10000);\r\n  };\r\n  checkoutContinued = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  render() {\r\n    let summery = <Redirect to=\"/\" />;\r\n    const purchaseRedirect = this.props.redirect ? <Redirect to=\"/\" /> : null;\r\n    if (this.props.ingredients) {\r\n      summery = (\r\n        <div>\r\n          <CheckoutSummery\r\n            ingredients={this.props.ingredients}\r\n            checkoutCanceled={this.checkoutCanceled}\r\n            checkoutContinued={this.checkoutContinued}\r\n          />\r\n          <Route\r\n            path={`${this.props.match.path}/contact-data`}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {purchaseRedirect}\r\n        {summery}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    redirect: state.order.redirect,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport styles from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  let inputElement = null;\r\n  let errorMessage = null;\r\n  const inputClasses = [styles.InputElement];\r\n\r\n  if (props.invalid && props.touched) {\r\n    inputClasses.push(styles.Invalid);\r\n    errorMessage = (\r\n      <p style={{ margin: \"5px 0\", color: \"red\", textAlign: \"left\" }}>\r\n        Please enter a valid {props.elementConfig.valuetype}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  switch (props.elementtype) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n          onBlur={props.errorHandler}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={styles.input}>\r\n      <label className={styles.Label}>{props.label}</label>\r\n      {inputElement}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1V4hE\",\"Label\":\"Input_Label__3DpAD\",\"InputElement\":\"Input_InputElement__rhet_\",\"Invalid\":\"Input_Invalid__ew1WL\"};"],"sourceRoot":""}